apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: bundle-all 
  namespace: okd-team
spec:
  params:
  - name: repo-name
    description: The name of the repo
    type: string
  - name: base-image-registry
    description: base registry image to push to
    type: string
  - name: bundle-version
    description: bundle version
    type: string
 
  workspaces:
  - name: src
  - name: build-cache-root
    mountPath: /home/1001
  - name: build-cache-home
    mountPath: /home/1001
      
  steps: 
  - name: bundle
    image: quay.io/okd/go-bundle-tools:v1.0.0
    workingDir: /workspace/src/$(params.repo-name)
    command: ["make"]
    args: ["bundle","OPERATOR_SDK_BIN=/usr/bin/operator-sdk","KUSTOMIZE=/usr/bin/kustomize","IMG=$(params.base-image-registry)/$(params.repo-name)-bundle:$(params.bundle-version)"]

  - name: bundle-dockerfile-check
    image: quay.io/okd/go-bundle-tools:v1.0.0
    workingDir: /workspace/src/$(params.repo-name)
    script: |
      #!/usr/bin/env bash
      # grep -irn Dockerfile --include="Makefile" | grep -oE "bundle.Dockerfile||Dockerfile.bundle"
      echo "checking bundle dockerfile"
      if [ -f "Dockerfile.bundle" ]; then
        echo "copying Dockerfile.bundle to bundle.Dockerfile for kaniko build"
        cp  Dockerfile.bundle bundle.Dockerfile
      fi
  
  - name: bundle-image-push
    workingDir: /workspace/src/$(params.repo-name)
    image:  gcr.io/kaniko-project/executor:latest
    command: ["/kaniko/executor"]
    args: ["--dockerfile=/workspace/src/$(params.repo-name)/bundle.Dockerfile","--context=/workspace/src/$(params.repo-name)/","--destination=$(params.base-image-registry)/$(params.repo-name)-bundle:$(params.bundle-version)"]
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/
      
  - name: index-image-build
    image: quay.io/okd/go-bundle-tools:v1.0.0
    workingDir: /workspace/src/$(params.repo-name)
    script: |
      #!/usr/bin/env bash
      echo "executing opm generate index dockerfile"
      /usr/bin/opm index add --bundles $(params.base-image-registry)/$(params.repo-name)-bundle:$(params.bundle-version) --generate --out-dockerfile "index.Dockerfile"
      cat index.Dockerfile
 
  - name: index-image-push
    workingDir: /workspace/src/$(params.repo-name)
    image:  gcr.io/kaniko-project/executor:latest
    command: ["/kaniko/executor"]
    args: ["--dockerfile=/workspace/src/$(params.repo-name)/index.Dockerfile","--context=/workspace/src/$(params.repo-name)/","--destination=$(params.base-image-registry)/$(params.repo-name)-index:$(params.bundle-version)"]
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/

  - name: catalog-image-build
    image: quay.io/okd/go-bundle-tools:v1.0.0
    workingDir: /workspace/src/$(params.repo-name)
    script: |
      #!/usr/bin/env bash
      echo "executing script to build catalog image"
      mkdir catalog
      opm generate dockerfile catalog
      # leave the icon out for now
      # opm init $(params.repo-name) --default-channel=preview  --description=./README.md  --icon=./example-operator.svg  --output yaml > catalog/operator.yaml
      opm init $(params.repo-name)  --default-channel=preview  --description=./README.md  --output yaml > catalog/operator.yaml
      opm render $(params.base-image-registry)/$(params.repo-name)-bundle:$(params.bundle-version)   --output=yaml >> catalog/operator.yaml
      
      # BUG (maybe) for some reason the render uses a . instead of : for the name - needs to be checked
      cat << EOF >> catalog/operator.yaml
      ---
      schema: olm.channel
      package: $(params.repo-name)
      name: preview
      entries:
      - name: $(params.repo-name).$(params.bundle-version) 
      EOF
      
      opm validate catalog
      cat catalog.Dockerfile

  - name: catalog-image-push
    workingDir: /workspace/src/$(params.repo-name)
    image:  gcr.io/kaniko-project/executor:latest
    command: ["/kaniko/executor"]
    args: ["--dockerfile=/workspace/src/$(params.repo-name)/catalog.Dockerfile","--context=/workspace/src/$(params.repo-name)/","--destination=$(params.base-image-registry)/$(params.repo-name)-catalog:$(params.bundle-version)"]
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/

  volumes:
  - name: docker-config
    configMap:
      name: docker-config

